@model Smpl_prjct_mng_mnt_tol.EF.Task
@using Smpl_prjct_mng_mnt_tol.EF

@{
    ViewBag.Title = "Add Task";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .btn {
        /*margin-left:7px;
        margin-right:7px;*/
        border-left: 10px;
    }

    .topbuttonsDiv {
        margin-bottom: 40px;
    }
</style>



@if (ViewBag.message != null)
{
    <h1 style="color:crimson">@ViewBag.Message</h1>
}
@if (Session["logger"] != null)
{

    LoginViewModel a = new LoginViewModel();
    a = (LoginViewModel)Session["logger"];



    if (a.designationName != String.Empty)
    {
        <h1>Add Task</h1>

        <br />
        <br />
        <div style="float:right" class="topbuttonsDiv">
         


            <button>
                @Html.ActionLink("Project Manager Home", "ProjectManagerHome", "Home", null, new { @class = "btn btn-success" })
            </button>
            <button> @Html.ActionLink("Add Project", "AddProject", "Home", null, new { @class = "btn btn-primary" })</button>

            <button>
                @Html.ActionLink("Update Project", "UpdateProject", "Home", null, new { @class = "btn btn-danger" })
            </button>
            <button>
                @Html.ActionLink("Assign Employee", "AssignEmployee", "Home", null, new { @class = "btn btn-info" })
            </button>
            <button>
                @Html.ActionLink("Add New Task", "AddTask", "Task", null, new { @class = "btn btn-success" })
            </button>

            <button>
                @Html.ActionLink("Add Comment", "AddComment", "Task", null, new { @class = "btn btn-danger" })
            </button>

        </div>

        <div class="clearfix"></div>

        using (Html.BeginForm("AddTask", "Task", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @id = "AddUserForm", @class = "clearfix", role = "form" }))
        {

            @Html.AntiForgeryToken()

            <div class="form-horizontal">
        
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    @*@Html.DisplayName("Select Project");*@
                    <label class="control-label col-md-2">Select Project</label>
                    @* @Html.LabelFor(model => model.projectId, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">


                        @Html.DropDownListFor(model => model.projectId, ViewBag.selectProjects as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "dropdown", @id = "ddlproject", onchange = "getAssignee(" + a.id + ")" })


                    </div>
                </div>

                <div class="form-group" id="EmployeePerProject">

                    <label class="control-label col-md-2">Assign to</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.assigneeid, ViewBag.selectEmployeesAssignedToProject as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "dropdown", @id = "course-time" })
                    </div>
                </div>


                <div id="EmployeePerProjectUPDATEDonchange">


                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.taskHeading, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.taskHeading, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.taskHeading, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.dueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.dueDate, new { htmlAttributes = new { @class = "form-control", @id = "datepicker1" } })
                        @Html.ValidationMessageFor(model => model.dueDate, "", new { @class = "text-danger" })

                        @*@Html.EditorFor(model => model.priorityId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.priorityId, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Priority</label>
                    @*  @Html.LabelFor(model => model.priorityId, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">

                        @Html.DropDownListFor(model => model.priorityId, ViewBag.selectallPriorities as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "dropdown", @id = "course-time" })


                        @*@Html.EditorFor(model => model.assignedbyId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.assignedbyId, "", new { @class = "text-danger" })*@
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save Task" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }

    }
}
else


{
    <h1> You are not authorized,please login </h1>

}




@section scripts {
    <script src="~/Scripts/jquery-3.2.1.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />


    <script type="text/javascript">
        $(function () {
            $("#datepicker1").datepicker();
        });




        /*

        $("#show").click(function () {

            $.ajax({
                method: "get",
                url: '/Home/UploadFilesAdd',
                success: function (data) {
                    alert("hi");
                }

            })
            //console.log(listc)
            //renderchart(listc)
        });
        */
        var employeeinsession;
        $("#ddlproject").change(function (e) {
            //e.preventDefault();
            var projectId = $(this).val();
            console.log(projectId);
            console.log(employeeinsession);


            $.ajax({
                method: "POST",
                //url: '/Task/GetEmployeesAssignedToProject()',
                url: '/Task/getemployeeByProject?projectId=' + projectId + '&LoggerId=' + employeeinsession,
                success: function (data) {

                    //data = JSON.parse(data)
                    console.log(data);

                    $('#EmployeePerProject').remove();

                    var replaceDDL = "";
                    replaceDDL = replaceDDL + '<div class="form-group" id="EmployeePerProjectUPDATEDonchange">'
                        + '<label class="control-label col-md-2">Assign to</label>'
                        + '<div class="col-md-10">'
                        + '<select class="dropdown" data-val="true" data-val-number="The field assigneeid must be a number." data-val-required="The assigneeid field is required." id="course-time" name= "assigneeid" >'

                    var option;
                    var length = data.length;

                    if(length>=1){
                    jQuery.each(data, function (index, Obj) {
                        option = option + '<option value=' + Obj.userid + ">" + Obj.assignee + "</option>"
                        });
                    }
                    else {
                        option = option + '<option value='+ 1 + ">" + "No User For This Project" + "</option>"
                    }
                    option = option + "</select>";

                    replaceDDL = replaceDDL + option;

                    jQuery("#EmployeePerProjectUPDATEDonchange").html(replaceDDL);

                }

            })



        });


        function getAssignee(a) {

            employeeinsession = a;

            console.log(a);
            //console.log(b);
            console.log("listc")

        }

    </script>
}



