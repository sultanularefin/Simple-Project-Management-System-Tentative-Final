@model Smpl_prjct_mng_mnt_tol.EF.Assignment

@using Smpl_prjct_mng_mnt_tol.EF
@{
    //ViewBag.Title = "AdminPage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .btn {
        /*margin-left:7px;
        margin-right:7px;*/
        border-left: 10px;
    }

    .topbuttonsDiv {
        margin-bottom: 40px;
    }
</style>




@if (ViewBag.message != null)
{
    <h1 style="color:crimson">@ViewBag.Message</h1>
}
@if (Session["logger"] != null)
{

    LoginViewModel a = new LoginViewModel();
    a = (LoginViewModel)Session["logger"];

    List<Assignment> allassignments = new List<Assignment>();
    allassignments = ViewBag.allAssignment;

    if (a.designationName == "Project Manager")
    {
        <h1>Assign Resource Person</h1>

        <br />
        <br />
        <div style="float:right" class="topbuttonsDiv">
            @*<div>*@


            <button>
                @Html.ActionLink("Project Manager Home", "ProjectManagerHome", "Home", null, new { @class = "btn btn-success" })
            </button>
            <button> @Html.ActionLink("Add Project", "AddProject", "Home", null, new { @class = "btn btn-primary" })</button>

            <button>
                @Html.ActionLink("Update Project", "UpdateProject", "Home", null, new { @class = "btn btn-danger" })
            </button>
            <button>
                @Html.ActionLink("Assign Employee", "AssignEmployee", "Home", null, new { @class = "btn btn-info" })
            </button>
            <button>
                @Html.ActionLink("Add New Task", "AddTask", "Task", null, new { @class = "btn btn-success" })
            </button>

            <button>
                @Html.ActionLink("Add Comment", "AddComment", "Task", null, new { @class = "btn btn-danger" })
            </button>

        </div>

        <div class="clearfix"></div>

        using (Html.BeginForm("AssignEmployee", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @id = "AddUserForm", @class = "clearfix", role = "form" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
               
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.id)


                <div class="form-group">
                    <label class="control-label col-md-2">Select Project</label>
                  

                    @Html.DropDownListFor(model => model.projectId, ViewBag.selectProjects as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "dropdown", @id = "course-time" })
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.userId, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2">Select Resource Person</label>

                    @Html.DropDownListFor(model => model.userId, ViewBag.selectEmployees as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "dropdown", @id = "course-time" })
                </div>




                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>

        }


       <table class="table">
            <tr>
                <th>
                    @Html.DisplayName("Project Name")
                </th>

                <th>
                    @Html.DisplayName("Resource Person")
                </th>
                <th>
                    @Html.DisplayName("Designation")
                </th>

            </tr>

            @if (allassignments != null)
            {

                foreach (Assignment aAssignment in allassignments)

                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => aAssignment.Project.name)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => aAssignment.User.name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => aAssignment.User.designationId)
                        </td>
                    </tr>
                }
            }
        </table>

    }
}

else
{
    <h1> You are not authorized,please login </h1>

}


@*<script src="~/Scripts/jquery-3.2.1.js"></script>*@
@section scripts {
    <script type="text/javascript">

        //$('#userPassword').blur(function a() {


        //    alert("rrrrrrrrrrrrr");
        //});



        function defaultpassword(sender, args) {

            var email = document.getElementById('userPassword').value;

            email = email.concat("123");

            //alert(email);

            //email = email + "123";
            document.getElementById("userspassword").value = email;


            return;
            //var someNr = 100;
            //$('#MyHiddenId').val(someNr);
            //Or without jQuery :

            //document.getElementById("MyHiddenId").value = somNr;


        }
    </script>

}